{"version":3,"sources":["components/ContactItem/ContactItem.module.css","redux/services/api.js","redux/contacts/contactsType.js","redux/contacts/contactsAction.js","redux/contacts/contactOperations.js","components/phonebook/Phonebook.js","components/ContactItem/ContactItem.js","redux/contacts/contactSelectors.js","components/filterContacts/FilterContacts.jsx","components/contactList/ContactList.js","contexts/ThemeContext.jsx","App.js","hoc/withTheme.jsx","redux/contacts/contactsReducer.js","redux/rootReducer.js","redux/store.js","index.js","components/phonebook/Phonebook.module.css"],"names":["module","exports","axios","defaults","baseURL","get","contact","post","id","delete","type","contactsType","contactList","payload","error","idContactDelete","nameContact","name","dispatch","contactsActions","api","then","data","catch","number","Phonebook","state","contactName","handleChange","target","value","setState","handleSubmit","e","preventDefault","addContact","props","this","onSubmit","style","marginLeft","className","styles","title","inputName","onChange","placeholder","required","inputNumber","btn","Component","connect","contactsOperations","deleteContact","btnDelete","onClick","filterContact","contactRoot","filterReducer","createSelector","contactReducer","contacts","searchInput","filter","toLowerCase","includes","contactsAction","letterSpacing","height","marginBottom","ContactList","getAllContacts","color","map","key","console","log","Context","createContext","themeConfig","light","fontColor","bodybg","dark","ThemeContext","toggleTheme","prevTheme","theme","Provider","children","Consumer","withTheme","WrappedComponent","context","filterByName","contactStorage","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","background","marginTop","borderColor","width","backgroundColor","fontWeight","combineReducers","action","loading","contactError","rootReducer","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10e4b5c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"ContactItem_btnDelete__xBuRM\"};","import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://localhost:4242\";\n\nconst getAllContacts = () => axios.get(\"/contacts\");\n\nconst addContact = (contact) => axios.post(\"/contacts\", contact);\n\nconst deleteContact = (id) => axios.delete(`/contacts/${id}`);\n\nexport default { getAllContacts, addContact, deleteContact };","export default {\n  GET_CONTACT_START: \"contacts/GET_CONTACT-START\",\n  GET_CONTACT_SUCCESS: \"contacts/GET_CONTACT_SUCCESS\",\n  GET_CONTACT_FAILURE: \"contacts/GET_CONTACT_FAILURE\",\n\n  ADD_CONTACT_START: \"contacts/ADD_CONTACT_START\",\n  ADD_CONTACT_SUCCESS: \"contacts/ADD_CONTACT_SUCCESS\",\n  ADD_CONTACT_FAILURE: \"contacts/ADD_CONTACT_FAILURE\",\n\n  DELETE_CONTACT_START: \"contacts/DELETE_CONTACT_START\",\n  DELETE_CONTACT_SUCCESS: \"contacts/DELETE_CONTACT_SUCCESS\",\n  DELETE_CONTACT_FAILURE: \"contacts/DELETE_CONTACT_FAILURE\",\n\n  FILTER_CONTACT: \"contacts/FILTER_CONTACT\",\n};","import contactsType from \"./contactsType\";\n\n/* GET */\nconst getContactStart = () => ({\n  type: contactsType.GET_CONTACT_START,\n});\n\nconst getContactSuccess = (contactList) => ({\n  type: contactsType.GET_CONTACT_SUCCESS,\n\n  payload: { contactList },\n});\n\nconst getContactFailure = (error) => ({\n  type: contactsType.GET_CONTACT_FAILURE,\n\n  payload: { error },\n});\n\n/* ADD */\nconst addContactStart = () => ({\n  type: contactsType.ADD_CONTACT_START,\n});\n\nconst addContactSuccess = (contact) => ({\n  type: contactsType.ADD_CONTACT_SUCCESS,\n\n  payload: {\n    contact,\n  },\n});\n\nconst addContactFailure = (error) => ({\n  type: contactsType.ADD_CONTACT_FAILURE,\n\n  payload: { error },\n});\n\n/* DELETE */\nconst deleteContactStart = () => ({\n  type: contactsType.DELETE_CONTACT_START,\n});\n\nconst deleteContactSuccess = (idContactDelete) => ({\n  type: contactsType.DELETE_CONTACT_SUCCESS,\n\n  payload: { id: idContactDelete },\n});\n\nconst deleteContactFailure = (error) => ({\n  type: contactsType.DELETE_CONTACT_FAILURE,\n\n  payload: { error },\n});\n\n/* FILTER */\nconst filterContact = (nameContact) => ({\n  type: contactsType.FILTER_CONTACT,\n\n  payload: {\n    name: nameContact,\n  },\n});\n\nexport default {\n  getContactStart,\n  getContactSuccess,\n  getContactFailure,\n\n  addContactStart,\n  addContactSuccess,\n  addContactFailure,\n\n  deleteContactStart,\n  deleteContactSuccess,\n  deleteContactFailure,\n\n  filterContact,\n};","import api from \"../services/api\";\nimport contactsActions from \"./contactsAction\";\n\nconst getAllContactsOperations = () => (dispatch) => {\n  dispatch(contactsActions.getContactStart());\n\n  api\n    .getAllContacts()\n    .then(({ data }) => dispatch(contactsActions.getContactSuccess(data)))\n    .catch((error) => dispatch(contactsActions.getContactFailure(error)));\n};\n\nconst addContactOperations = (name, number) => (dispatch) => {\n  dispatch(contactsActions.addContactStart());\n\n  api\n    .addContact({ name, number })\n    .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\n    .catch((error) => dispatch(contactsActions.addContactFailure(error)));\n};\n\nconst deleteContactOperations = (id) => (dispatch) => {\n  dispatch(contactsActions.deleteContactStart());\n\n  api\n    .deleteContact(id)\n    .then(() => dispatch(contactsActions.deleteContactSuccess(id)))\n    .catch((error) => dispatch(contactsActions.deleteContactFailure(error)));\n};\n\nexport default {\n  getAllContactsOperations,\n  addContactOperations,\n  deleteContactOperations,\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsOperations from \"../../redux/contacts/contactOperations\";\nimport styles from \"./Phonebook.module.css\";\n\nclass Phonebook extends Component {\n  state = {\n    contactName: \"\",\n    number: \"\",\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { contactName, number } = this.state;\n    const { addContact } = this.props;\n\n    this.setState({\n      contactName: \"\",\n      number: \"\",\n    });\n    addContact(contactName, number);\n  };\n\n  render() {\n    \n    const { contactName, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} style={{ marginLeft: \"30px\" }}>\n        <h2 className={styles.title} >Phonebook</h2>\n\n        <input\n          className={styles.inputName}\n          type=\"text\"\n          name=\"contactName\"\n          value={contactName}\n          onChange={this.handleChange}\n          placeholder=\"Enter name...\"\n          required\n        ></input>\n\n        <input\n          className={styles.inputNumber}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={this.handleChange}\n          placeholder=\"Number...\"\n          required\n        ></input>\n\n        <button type=\"submit\" className={styles.btn}>Add contact</button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addContact: (name, number) =>\n    dispatch(contactsOperations.addContactOperations(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(Phonebook);\n\n\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsOperations from \"../../redux/contacts/contactOperations\";\nimport styles from \"./ContactItem.module.css\";\n\nconst ContactItem = ({ contact: { id, name, number }, deleteContact }) => {\n  return (\n    <li>\n      <span>{name}: </span>\n      <span>{number}</span>\n      <button\n        type=\"button\"\n        className={styles.btnDelete}\n        onClick={() => deleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nconst mapDispatchToProps = (dispatch, { id }) => {\n  return {\n    deleteContact: () =>\n      dispatch(contactsOperations.deleteContactOperations(id)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ContactItem);\n\n","import { createSelector } from \"reselect\";\n\nexport const getContact = (state) => state.contactRoot.contactReducer;\nexport const isLoading = (state) => state.contactRoot.loadingReducer;\nexport const getError = (state) => state.contactRoot.contactErrorReducer;\nexport const filterContact = (state) => state.contactRoot.filterReducer;\n\nexport const contactList = createSelector(\n  [getContact, filterContact],\n  (contacts, searchInput) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(searchInput.toLowerCase())\n    );\n  }\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsAction from \"../../redux/contacts/contactsAction\";\nimport { filterContact } from \"../../redux/contacts/contactSelectors\";\n\nconst FilterContacts = ({ filter, onChange }) => {\n  return (\n    <>\n      <h4\n        style={{\n          marginLeft: \"30px\",\n          letterSpacing: \"1px\",\n        }}\n      >\n        Find contacts by name:\n      </h4>\n      <input\n        style={{ marginLeft: \"30px\", height: \"25px\", marginBottom: \"10px\" }}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n      ></input>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    filter: filterContact(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onChange: (e) => dispatch(contactsAction.filterContact(e.target.value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContacts);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport FilterContacts from \"../filterContacts/FilterContacts\";\nimport contactsOperations from \"../../redux/contacts/contactOperations\";\nimport { contactList } from \"../../redux/contacts/contactSelectors\";\n\n\nclass ContactList extends Component {\n  componentDidMount() {\n    const { getAllContacts } = this.props;\n    getAllContacts();\n  }\n\n  render() {\n    const { contactList, filter, onChange } = this.props;\n\n    return (\n      <>\n        <h2 style={{ marginLeft: \"30px\", color: \"blue\" }}>Contacts</h2>\n        <FilterContacts filter={filter} onChange={onChange} />\n        <ul>\n          {contactList.map((contact) => (\n            <ContactItem id={contact.id} contact={contact} key={contact.id} />\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(\"state\", state);\n  return {\n    contactList: contactList(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getAllContacts: () =>\n      dispatch(contactsOperations.getAllContactsOperations()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React, { Component, createContext } from \"react\";\n\nconst Context = createContext();\nconst themeConfig = {\n  light: {\n    fontColor: \"black\",\n    bodybg: \"white\",\n  },\n  dark: {\n    fontColor: \"white\",\n    bodybg: \"black\",\n  },\n};\n\nclass ThemeContext extends Component {\n  static Consumer = Context.Consumer;\n\n  toggleTheme = () => {\n    this.setState((prevTheme) => {\n      if (prevTheme.theme === \"light\") {\n        return { theme: \"dark\", themeConfig: themeConfig.dark };\n      } else {\n        return { theme: \"light\", themeConfig: themeConfig.light };\n      }\n    });\n  };\n\n  state = {\n    theme: \"light\",\n    themeConfig: themeConfig.light,\n    toggleTheme: this.toggleTheme,\n  };\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport default ThemeContext;\n\n\n","import React, { Component } from \"react\";\nimport Phonebook from \"./components/phonebook/Phonebook\";\nimport ContactList from \"./components/contactList/ContactList\";\nimport withTheme from \"./hoc/withTheme\";\n\nclass App extends Component {\n  state = {\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contactStorage = localStorage.getItem(\"contacts\");\n    if (contactStorage) {\n      this.setState({ contacts: JSON.parse(contactStorage) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  filterByName = () => {};\n\n  deleteContact = (id) => {};\n\n  render() {\n   \n    \n    const {\n      themeConfig: { fontColor, bodybg },\n    } = this.props;\n    const { filter } = this.state;\n    return (\n      <div style={{ color: fontColor, background: bodybg }}>\n        <button\n          type=\"submit\"\n          style={{\n            marginLeft: \"30px\",\n            marginTop: \"20px\",\n            borderColor: \"white\",\n            height: \"35px\",\n            width: \"150px\",\n            backgroundColor: \"black\",\n            color: \"white\",\n            fontWeight: \"bold\",\n            letterSpacing: \"1px\",\n          }}\n          onClick={this.props.toggleTheme}\n        >\n          Change theme\n        </button>\n        <Phonebook name={this.state.name} number={this.state.number} />\n\n        <ContactList filter={filter} deleteContact={this.deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default withTheme(App);\n","import React from \"react\";\nimport ThemeContext from \"../contexts/ThemeContext\";\n\n\nconst withTheme = (WrappedComponent) => {\n  return function WithTheme(props) {\n    return (\n      <ThemeContext.Consumer>\n        {(context) => {\n          return (\n            <WrappedComponent\n              {...props}\n              theme={context.theme}\n              themeConfig={context.themeConfig}\n              toggleTheme={context.toggleTheme}\n            />\n          );\n        }}\n      </ThemeContext.Consumer>\n    );\n  };\n};\n\nexport default withTheme;\n\n","import { combineReducers } from \"redux\";\nimport contactsType from \"./contactsType\";\n\nconst contactReducer = (state = [], action) => {\n  switch (action.type) {\n    case contactsType.GET_CONTACT_SUCCESS:\n      return action.payload.contactList;\n\n    case contactsType.ADD_CONTACT_SUCCESS:\n      return [...state, action.payload.contact];\n\n    case contactsType.DELETE_CONTACT_SUCCESS:\n      return state.filter((contact) => contact.id !== action.payload.id);\n\n    default:\n      return state;\n  }\n};\n\nconst filterReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case contactsType.FILTER_CONTACT:\n      return action.payload.name;\n\n    default:\n      return state;\n  }\n};\n\nconst loadingReducer = (state = false, { type }) => {\n  switch (type) {\n    case contactsType.GET_CONTACT_START:\n    case contactsType.ADD_CONTACT_START:\n    case contactsType.DELETE_CONTACT_START:\n      return true;\n\n    case contactsType.GET_CONTACT_SUCCESS:\n    case contactsType.GET_CONTACT_FAILURE:\n      return true;\n    case contactsType.ADD_CONTACT_SUCCESS:\n    case contactsType.ADD_CONTACT_FAILURE:\n     return true;\n    \n    case contactsType.DELETE_CONTACT_SUCCESS:\n    case contactsType.DELETE_CONTACT_FAILURE:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nconst contactErrorReducer = (state = null, { type, payload }) => {\n  switch (type) {\n    case contactsType.GET_CONTACT_FAILURE:\n    case contactsType.ADD_CONTACT_FAILURE:\n    case contactsType.DELETE_CONTACT_FAILURE:\n      return payload.error;\n\n    case contactsType.GET_CONTACT_START:\n    case contactsType.ADD_CONTACT_START:\n    case contactsType.DELETE_CONTACT_START:\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  contactReducer: contactReducer,\n  filterReducer: filterReducer,\n  loading: loadingReducer,\n  contactError: contactErrorReducer,\n});\n\n","import { combineReducers } from \"redux\";\nimport contactReducer from \"./contacts/contactsReducer\";\n\nconst rootReducer = combineReducers({\n  contactRoot: contactReducer,\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./rootReducer\";\n\nconst middleware = [thunk];\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport ThemeContext from \"./contexts/ThemeContext\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeContext>\n      <App />\n    </ThemeContext>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Phonebook_btn__1UFp6\",\"inputName\":\"Phonebook_inputName__3ASW-\",\"inputNumber\":\"Phonebook_inputNumber__1T-La\"};"],"sourceRoot":""}